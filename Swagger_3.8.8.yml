openapi: 3.0.1
info:
  title: openapiproblems
  version: 0.0.1
paths:
  /api/email/output:
    get:
      tags:
      - Email
      summary: Get the email output location.
      description: Get the email output location.
      operationId: getEmailOutputLocation
      responses:
        "200":
          description: Email output location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadEmailOutputLocationDto10'
        "401":
          description: Not authenticated
        "500":
          description: Internal server error
  /api/email/settings:
    get:
      tags:
      - Email
      summary: Get the email settings.
      description: Get the email settings.
      operationId: getEmailSettings
      responses:
        "200":
          description: Email settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadEmailSettingsDto10'
        "401":
          description: Not authenticated
        "500":
          description: Internal server error
  /bug1/uuid:
    post:
      tags:
      - Bug1
      operationId: getExampleUuidDto
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidDto'
        required: true
      responses:
        "200":
          description: getExampleUuidDto 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
  /bug11/backup:
    get:
      tags:
      - Bug11
      operationId: getBackupSettings11
      responses:
        "200":
          description: getBackupSettings11 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadBackupSettingsDto11'
  /bug2/backup:
    post:
      tags:
      - Bug2
      operationId: startBackup
      responses:
        "200":
          description: startBackup 200 response
  /bug3/backup:
    get:
      tags:
      - Bug3
      operationId: getBackupSettings
      responses:
        "200":
          description: getBackupSettings 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadBackupSettingsDto3_4'
  /bug5/owner:
    get:
      tags:
      - Bug5
      operationId: getOwner
      responses:
        "200":
          description: getOwner 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
  /bug6/file:
    get:
      tags:
      - Bug6
      operationId: downloadWaterFile
      responses:
        "200":
          description: Download the same file again
          content:
            application/json:
              schema:
                type: string
                format: binary
        "500":
          description: Internal server error
  /bug7/file:
    post:
      tags:
      - Bug7
      operationId: redownloadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Download the same file again
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "500":
          description: Internal server error
  /bug8/greeting:
    post:
      tags:
      - Bug8
      operationId: sendGreeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting8'
        required: true
      responses:
        "200":
          description: sendGreeting 200 response
  /bug9/greeting:
    get:
      tags:
      - Bug9
      summary: Return a friendly greeting.
      description: Return a friendly greeting.
      operationId: getGreeting
      responses:
        "200":
          description: A friendly greeting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting9'
        "500":
          description: Internal server error
components:
  schemas:
    BackupFrequencyDto11:
      type: string
      description: Schema that represents the frequency of the backup
      enum:
      - DAILY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    BackupFrequencyDto3_4:
      type: string
      description: Backup frequency (Daily or on a specific weekday) or null if backup
        is not active
      enum:
      - DAILY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    BackupTimeDto3_4:
      required:
      - hour
      - minute
      type: object
      properties:
        hour:
          maximum: 23
          minimum: 0
          type: integer
          description: Hour of the day in the European format (E.g. 19:30)
          format: int32
        minute:
          maximum: 59
          minimum: 0
          type: integer
          description: Minutes of the hour
          format: int32
      description: Schema represents the backup time in the European time format (E.g.
        19:30)
    Bike:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the bike
          format: uuid
        name:
          type: string
          description: Name of the bike
      description: "Bike, a custom vehicle type"
    Car:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the car
          format: uuid
        name:
          type: string
          description: Name of the car
      description: "Car, a custom vehicle type"
    EmailSendProtocolDto10:
      type: string
      description: Schema that represents the possible email protocols for sending
        emails
      enum:
      - SMTP
      - SMTP_SSL
      - SMTP_STARTTLS
    Greeting8:
      type: object
      properties:
        message:
          type: string
          description: Greeting message the receiver will get
        senderId:
          type: string
          description: ID of the sender
          format: uuid
        receiverId:
          type: string
          description: ID of the receiver
          format: uuid
      description: Represent a greeting between a sender and a receiver
    Greeting9:
      type: object
      properties:
        message:
          type: string
          description: Greeting message the receiver will get
        senderId:
          type: string
          description: ID of the sender
          format: uuid
        receiverId:
          type: string
          description: ID of the receiver
          format: uuid
      description: Represent a greeting between a sender and a receiver
    Owner:
      type: object
      properties:
        name:
          type: string
          description: Name of the owner
        vehicle:
          allOf:
          - $ref: '#/components/schemas/Vehicle'
          - description: Vehicle of the owner
            anyOf:
            - $ref: '#/components/schemas/Car'
            - $ref: '#/components/schemas/Bike'
      description: Owner that has a vehicle (Car or bike)
    ReadBackupSettingsDto11:
      required:
      - requiredBackupFrequency
      type: object
      properties:
        requiredBackupFrequency:
          allOf:
          - $ref: '#/components/schemas/BackupFrequencyDto11'
          - type: object
            description: Required backup frequency
        optionalBackupFrequency:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/BackupFrequencyDto11'
          - type: object
            description: Optional backup frequency. The key/value be omitted in the
              JSON result.
      description: Schema that represents the current backup settings
    ReadBackupSettingsDto3_4:
      type: object
      properties:
        active:
          type: boolean
          description: "Flag that indicates whether the backup is active or not. If\
            \ set to false, all other values are null"
        backupFrequency:
          allOf:
          - $ref: '#/components/schemas/BackupFrequencyDto3_4'
          - type: object
            description: Backup frequency (Daily or on a specific weekday) or null
              if backup is not active
        backupTime:
          allOf:
          - $ref: '#/components/schemas/BackupTimeDto3_4'
          - type: object
            description: Backup time in European format (E.g. 19:30) or null if backup
              is not active
        username:
          type: string
          description: Username for the SMB backup share or null if backup is not
            active
        plaintextPassword:
          type: string
          description: Plaintext password for the user for the SMB backup share or
            null if backup is not active
        domain:
          type: string
          description: Optional domain of the user for the SMB backup share and/or
            null if backup is not active
        uncPath:
          type: string
          description: UNC formatted backup path or null if backup is not active.
            The backup will be saved into the directory
      description: Schema that represents the current backup settings
    ReadEmailOutputLocationDto10:
      required:
      - protocol
      type: object
      properties:
        protocol:
          allOf:
          - $ref: '#/components/schemas/EmailSendProtocolDto10'
          - type: object
            description: Protocol used for the connection
      description: Schema that represents an existing email output location
    ReadEmailSettingsDto10:
      required:
      - active
      - hostname
      - plaintextPassword
      - port
      - protocol
      - senderEmail
      - username
      type: object
      properties:
        active:
          type: boolean
          description: "Flag that indicates whether the email sending is active or\
            \ not. If set to false, all other values are null"
        hostname:
          type: string
          description: Hostname or IP of the email server or null if email sending
            is disabled
          nullable: true
        port:
          type: integer
          description: Port of the email server or null if email sending is disabled
          format: int32
          nullable: true
        protocol:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/EmailSendProtocolDto10'
          - type: object
            description: Protocol used for the connection or null if email sending
              is disabled
        username:
          type: string
          description: Email username to login or null if email sending is disabled
          nullable: true
        plaintextPassword:
          type: string
          description: Plaintext password for the email user to login in or null if
            email sending is disabled
          nullable: true
        senderEmail:
          type: string
          description: Sender email address that is used to send emails or null if
            email sending is disabled
          nullable: true
      description: Schema that represents the current email settings
    UuidDto:
      type: object
      properties:
        workingUuid:
          type: string
          description: Working UUID
          format: uuid
        brokenUuid:
          type: string
          description: Broken UUID
          format: uuid
        nestedObject:
          $ref: '#/components/schemas/UuidNestedObject'
      description: Schema to show different method/field schemas
    UuidNestedObject:
      type: object
      properties:
        value:
          type: string
          description: Example value
      description: Nested object
    Vehicle:
      type: object
      properties:
        id:
          type: string
          description: Get the unique ID of a vehicle
          format: uuid
      description: A vehicle that represents a car or bike
