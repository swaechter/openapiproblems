openapi: 3.0.1
info:
  title: openapiproblems
  version: 0.0.1
paths:
  /bug1/uuid:
    post:
      tags:
      - Bug1
      operationId: getExampleUuidDto
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidDto'
        required: true
      responses:
        "200":
          description: getExampleUuidDto 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
  /bug2/backup:
    post:
      tags:
      - Bug2
      operationId: startBackup
      parameters: []
      responses:
        "200":
          description: startBackup 200 response
  /bug3/backup:
    get:
      tags:
      - Bug3
      operationId: getBackupSettings
      parameters: []
      responses:
        "200":
          description: getBackupSettings 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadBackupSettingsDto'
  /bug5/owner:
    get:
      tags:
      - Bug5
      operationId: getOwner
      parameters: []
      responses:
        "200":
          description: getOwner 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
  /bug6/file:
    get:
      tags:
      - Bug6
      operationId: downloadWaterFile
      parameters: []
      responses:
        "200":
          description: Download the same file again
        "500":
          description: Internal server error
  /bug7/file:
    post:
      tags:
      - Bug7
      operationId: redownloadFile
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: Download the same file again
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "500":
          description: Internal server error
  /bug8/greeting:
    post:
      tags:
      - Bug8
      operationId: sendGreeting
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
        required: true
      responses:
        "200":
          description: sendGreeting 200 response
components:
  schemas:
    BackupFrequencyDto:
      type: string
      description: Backup frequency (Daily or on a specific weekday) or null if backup
        is not active
      enum:
      - DAILY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    BackupTimeDto:
      type: object
      properties:
        hour:
          maximum: 23
          minimum: 0
          type: integer
          description: Hour of the day in the European format (E.g. 19:30)
          format: int32
        minute:
          maximum: 59
          minimum: 0
          type: integer
          description: Minutes of the hour
          format: int32
      description: Backup time in European format (E.g. 19:30) or null if backup is
        not active
    Greeting:
      type: object
      properties:
        message:
          type: string
          description: Greeting message the receiver will get
        senderId:
          type: string
          description: ID of the sender
          format: uuid
        receiverId:
          type: string
          description: ID of the receiver
          format: uuid
      description: Represent a greeting between a sender and a receiver
    Owner:
      type: object
      properties:
        name:
          type: string
          description: Name of the owner
        vehicle:
          $ref: '#/components/schemas/Vehicle'
      description: Owner that has a vehicle (Car or bike)
    ReadBackupSettingsDto:
      type: object
      properties:
        active:
          type: boolean
          description: "Flag that indicates whether the backup is active or not. If\
            \ set to false, all other values are null"
        backupFrequency:
          $ref: '#/components/schemas/BackupFrequencyDto'
        backupTime:
          $ref: '#/components/schemas/BackupTimeDto'
        username:
          type: string
          description: Username for the SMB backup share or null if backup is not
            active
        plaintextPassword:
          type: string
          description: Plaintext password for the user for the SMB backup share or
            null if backup is not active
        domain:
          type: string
          description: Optional domain of the user for the SMB backup share and/or
            null if backup is not active
        uncPath:
          type: string
          description: UNC formatted backup path or null if backup is not active.
            The backup will be saved into the directory
      description: Schema that represents the current backup settings
    UuidDto:
      type: object
      properties:
        workingUuid:
          type: string
          description: Working UUID
          format: uuid
        brokenUuid:
          type: string
          description: Broken UUID
          format: uuid
        nestedObject:
          $ref: '#/components/schemas/UuidNestedObject'
      description: Schema to show different method/field schemas
    UuidNestedObject:
      type: object
      properties:
        value:
          type: string
          description: Example value
      description: Nested object
    Vehicle:
      type: object
      properties:
        id:
          type: string
          description: Get the unique ID of a vehicle
          format: uuid
      description: A vehicle that represents a car or bike
